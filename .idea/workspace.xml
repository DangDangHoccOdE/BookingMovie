<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="fddd0a86-f52c-48d8-b761-5ae00e5be15e" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/dataSources.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/material_theme_project_new.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/services/actorService.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/services/categoryService.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/services/cityService.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/services/commentService.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/services/directorService.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/services/movieImageService.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/services/movieService.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/services/paymentService.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/services/saloonTimeService.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/services/userService.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/store/actions/movieActions.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/utils/customFormItems/CustomCheckBox.jsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/utils/customFormItems/CustomSelect.jsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/utils/customFormItems/CustomTextArea.jsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/utils/customFormItems/CustomTextInput.jsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/utils/dateConvertForTicket.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/utils/dateConverter.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/utils/utilPages/CustomCheckBox.jsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/utils/utilPages/ProtectedRoute.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/utils/utilPages/ScrollToTop.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/src/main/java/org/microservice/userservice/security/config/SecurityConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/src/main/java/org/microservice/userservice/security/config/SecurityConfig.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/src/main/resources/application.yml" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/src/main/resources/application.yml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JSX File" />
        <option value="JavaScript File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="KubernetesApiPersistence"><![CDATA[{}]]></component>
  <component name="KubernetesApiProvider"><![CDATA[{
  "isMigrated": true
}]]></component>
  <component name="MigrationScriptOptions">
    <option name="ignoreImplicitObjects" value="true" />
    <option name="ignoreSourceCode" value="false" />
  </component>
  <component name="ProjectColorInfo"><![CDATA[{
  "customColor": "",
  "associatedIndex": 3
}]]></component>
  <component name="ProjectId" id="2seBokYxfIvlFIjpNqfIXrbvbvA" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "Docker.docker-compose.yml.mongo-express: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.mongodb: Compose Deployment.executor": "Run",
    "Node.js.ErrorPage.jsx.executor": "Run",
    "RequestMappingsPanelOrder0": "0",
    "RequestMappingsPanelOrder1": "1",
    "RequestMappingsPanelWidth0": "75",
    "RequestMappingsPanelWidth1": "75",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "Spring Boot.ApiGatewayApplication.executor": "Run",
    "Spring Boot.EmailServiceApplication.executor": "Run",
    "Spring Boot.EurekaServerApplication.executor": "Run",
    "Spring Boot.MovieServiceApplication.executor": "Run",
    "Spring Boot.UserServiceApplication.executor": "Run",
    "git-widget-placeholder": "main",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "C:/Users/hoanghaidang/Desktop/BookingMovie/movie-service/pom.xml",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.0",
    "project.structure.side.proportion": "0.0",
    "run.configurations.included.in.services": "true",
    "ts.external.directory.path": "C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.2.3\\plugins\\javascript-plugin\\jsLanguageServicesImpl\\external",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql",
      "mongo"
    ]
  }
}]]></component>
  <component name="ReactorSettings">
    <option name="notificationShown" value="true" />
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="KtorApplicationConfigurationType" />
        <option value="MicronautRunConfigurationType" />
        <option value="QuarkusRunConfigurationType" />
        <option value="SpringBootApplicationConfigurationType" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Node.js.ErrorPage.jsx">
    <configuration name="ErrorPage.jsx" type="NodeJSConfigurationType" temporary="true" nameIsGenerated="true" path-to-js-file="$PROJECT_DIR$/frontend/src/utils/utilPages/ErrorPage.jsx" working-dir="$PROJECT_DIR$/frontend/src/utils/utilPages">
      <method v="2" />
    </configuration>
    <configuration name="ApiGatewayApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="api-gateway" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="org.example.apigateway.ApiGatewayApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="EmailServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="email-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="org.example.emailservice.EmailServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="EurekaServerApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="eureka-server" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="org.example.eurekaserver.EurekaServerApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="MovieServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="movie-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="org.example.movieservice.MovieServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="UserServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="user-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="org.microservice.userservice.UserServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml" />
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.mongo-express: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="mongo-express" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.mongodb: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="mongodb" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Node.js.ErrorPage.jsx" />
        <item itemvalue="Docker.docker-compose.yml.mongo-express: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.mongodb: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-28b599e66164-intellij.indexing.shared.core-IU-242.23339.11" />
        <option value="bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-IU-242.23339.11" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="fddd0a86-f52c-48d8-b761-5ae00e5be15e" name="Changes" comment="" />
      <created>1738806339718</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1738806339718</updated>
      <workItem from="1738806344873" duration="20959000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>